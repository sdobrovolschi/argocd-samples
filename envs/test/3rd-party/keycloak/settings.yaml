fullnameOverride: test-keycloak
args:
  - start-dev

terminationGracePeriodSeconds: 60

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10002
  runAsGroup: 10002
  fsGroup: 10002
securityContext:
  allowPrivilegeEscalation: false
serviceAccount:
  create: false

extraEnv: |
  - name: JDK_JAVA_OPTIONS
    value: >-
      -Djava.awt.headless=true
      -Djava.net.preferIPv4Stack=true
      -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
      -Duser.timezone=UTC
      -Xms512m -Xmx768m
  - name: KC_HTTP_ENABLED
    value: "true"
  - name: KC_HOSTNAME_STRICT_HTTPS
    value: "false"
  - name: KC_HOSTNAME_STRICT
    value: "false"
  - name: KEYCLOAK_ADMIN
    valueFrom:
      secretKeyRef:
        name: '{{ include "keycloak.fullname" . }}-app'
        key: KEYCLOAK_ADMIN
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: '{{ include "keycloak.fullname" . }}-app'
        key: KEYCLOAK_ADMIN_PASSWORD

secrets:
  app:
    stringData:
      KEYCLOAK_ADMIN: 'admin'
      KEYCLOAK_ADMIN_PASSWORD: 'admin'

livenessProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health/live'
    port: http
  initialDelaySeconds: 0
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

readinessProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health/ready'
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

startupProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health'
    port: http
  initialDelaySeconds: 15
  timeoutSeconds: 1
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 60

resources:
  requests:
    cpu: 500m
    memory: 1024Mi
  limits:
    cpu: 500m
    memory: 1024Mi

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: acme-prod
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.org/server-snippets: |
      location / {
        proxy_set_header X-Forwarded-For $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
      }
  rules:
    - host: localhost
      paths:
        - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/'
          pathType: Prefix
  console:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: acme-prod
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.org/server-snippets: |
        location / {
          proxy_set_header X-Forwarded-For $host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host  $host;
        }
    rules:
      - host: localhost
        paths:
          - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/admin'
            pathType: Prefix
